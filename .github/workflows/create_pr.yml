name: Create Branch, Commit Changes, and Create Pull Request

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Branch name to create"
        required: true
      title:
        description: "Pull request title"
        required: true
      body:
        description: "Pull request body"
        required: true
      file_path:
        description: "Path to the file to change"
        required: true
      file_content:
        description: "Base64 encoded content for the file"
        required: true

jobs:
  create_pr:
    runs-on: ubuntu-latest
    environment: DA
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          # required
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up Git identity
        run: |
          git config --local user.email "codegen@durablealpha.com"
          git config --local user.name "Codegen Bot"

      - name: Decode file content and create a new branch
        run: |
          BRANCH_EXISTS=$(git ls-remote --heads origin ${{ github.event.inputs.branch_name }} | grep -q ${{ github.event.inputs.branch_name }} && echo "true" || echo "false")

          if [[ "$BRANCH_EXISTS" == "true" ]]; then
            git fetch origin ${{ github.event.inputs.branch_name }}
            git checkout -b ${{ github.event.inputs.branch_name }} origin/${{ github.event.inputs.branch_name }}
            git pull --rebase origin ${{ github.event.inputs.branch_name }}
          else
            git checkout -b ${{ github.event.inputs.branch_name }}
          fi

          echo "${{ github.event.inputs.file_content }}" | base64 -d > "${{ github.event.inputs.file_path }}"
          git add ${{ github.event.inputs.file_path }}
          git commit -m "Committing changes generated from codegen"
          git push origin ${{ github.event.inputs.branch_name }}

      - name: Check if PR already exists
        id: pr-check
        run: |
          PR_EXISTS=$(gh pr list --base main --head ${{ github.event.inputs.branch_name }} | grep -q ${{ github.event.inputs.branch_name }} && echo "true" || echo "false")
          echo "exists=$PR_EXISTS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token}}

      - name: Create Pull Request using GitHub CLI
        if: steps.pr-check.outputs.exists == 'false'
        run: |
          gh pr create --title "${{ github.event.inputs.title }}" \
                       --body "${{ github.event.inputs.body }}" \
                       --base main \
                       --head ${{ github.event.inputs.branch_name }}
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token}}
